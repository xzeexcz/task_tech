{
	"info": {
		"_postman_id": "42b2b19e-fe58-41f7-83f7-946fb0447fef",
		"name": "solva",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31555960"
	},
	"item": [
		{
			"name": "client-service",
			"item": [
				{
					"name": "Requesting currency pairs from the api",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8888/client/api/v1/get",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"client",
								"api",
								"v1",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set new limit to existing transactions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account\": \"9878\",\n\t\"limit\": \"1000\",\n\t\"expenseCategory\": \"PRODUCT\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8888/transactions/api/v1/set-new-limit",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"transactions",
								"api",
								"v1",
								"set-new-limit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all transaction that have over limit exceeded",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8888/client/api/v1/get-over-limits",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"client",
								"api",
								"v1",
								"get-over-limits"
							]
						},
						"description": "\nThis endpoint makes an HTTP GET request to retrieve information about the limits that have been exceeded. The response will be in JSON format and will include details such as expense category, account information, limit date and time, sum, currency shortname, limit sum, whether the limit has been exceeded, and date and time information.\n"
					},
					"response": []
				},
				{
					"name": "Requesting currency pairs from the api",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"// Test the response body structure and values",
									"pm.test(\"Response body structure is valid\", function () {",
									"    var responseJSON = pm.response.json();",
									"    pm.expect(responseJSON).to.be.an('object').that.has.property('close');",
									"    pm.expect(responseJSON).to.be.an('object').that.has.property('previousClose');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8888/client/api/v1/get-currency-close?symbol=RUB/USD",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"client",
								"api",
								"v1",
								"get-currency-close"
							],
							"query": [
								{
									"key": "symbol",
									"value": "RUB/USD"
								}
							]
						},
						"description": "\n### Get Currency Close\n\nThis endpoint makes an HTTP GET request to retrieve the close and previous close values for the specified currency symbol.\n\n#### Request Parameters\n- symbol (query parameter) - The currency symbol for which the close values are to be retrieved.\n\nExample:\n```\nhttp://localhost:8888/client/api/v1/get-currency-close?symbol=RUB/USD\n```\n\n#### Response\nUpon a successful request, the server responds with a status code of 200 and a JSON object containing the close and previous close values.\n\nExample Response:\n```json\n{\n    \"close\": 0,\n    \"previousClose\": 0\n}\n```\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "transactions-service",
			"item": [
				{
					"name": "Do Transaction",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_from\": \"9878\",\n\t\"account_to\": \"777\",\n\t\"sum\": \"12000\",\n\t\"currencyShortname\": \"RUB\",\n\t\"expenseCategory\": \"PRODUCT\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8888/transactions/api/v1/register-transaction",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"transactions",
								"api",
								"v1",
								"register-transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all transactions that have over limit exceeded from transactions service straight",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `",
									"<style type=\"text/css\">",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}",
									"    .tftable tr {background-color:#ffffff;}",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
									"    .tftable tr:hover {background-color:#e0ffff;}",
									"</style>",
									"",
									"<table class=\"tftable\" border=\"1\">",
									"    <tr>",
									"        <th>Data</th>",
									"    </tr>",
									"    ",
									"    {{#each response}}",
									"        <tr>",
									"            <td>{{this}}</td>",
									"        </tr>",
									"    {{/each}}",
									"</table>",
									"`;",
									"",
									"function constructVisualizerPayload() {",
									"    return {response: pm.response.json()}",
									"}",
									"",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8888/transactions/api/v1/get-over-transactions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"transactions",
								"api",
								"v1",
								"get-over-transactions"
							]
						},
						"description": "\nThis endpoint makes an HTTP GET request to retrieve a list of over transactions. The response will be in JSON format with a status code of 200. The response will contain an array of transaction data, with each transaction represented as an array.\n"
					},
					"response": []
				}
			]
		}
	]
}